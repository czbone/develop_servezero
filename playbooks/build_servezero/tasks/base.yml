##########################################
# ServeZeroベースシステム構築
##########################################
- name: Install minimal command
  dnf:
    name:
      - zip
      - unzip
      - net-tools
      - glibc-langpack-ja

- name: Set locale
  shell: |
    localectl set-locale LANG=ja_JP.UTF-8
    localectl set-keymap jp106

- name: Add Docker repository
  shell:
    cmd: 'dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo'

- name: Install Docker module
  dnf:
    name:
      - docker-ce
      - docker-ce-cli

- name: Start Docker
  service:
    name: 'docker'
    state: started
    enabled: true

- name: Install Docker compose
  shell:
    cmd: 'pip3 install docker-compose'

#
# ServeZeroシステム配置ディレクトリ作成
#
- name: Create system install directory
  file: path='{{ servezero_path }}/{{ servezero_share_volume }}' state=directory owner=root group=root mode=0755
- name: Create system log directory
  file: path='{{ servezero_path }}/{{ servezero_share_volume }}/log' state=directory owner=root group=root mode=0755
- file: src='{{ servezero_path }}/{{ servezero_share_volume }}/log' dest='/var/log/{{ servezero_system_name }}' state=link

#
# WWWディレクトリ作成
#
- name: Create www directory
  file: path='{{ www_document_root }}' state=directory owner=root group=root mode=0755
- name: Create virtual host directory
  file: path='{{ servezero_path }}/{{ servezero_share_volume }}/vhost' state=directory owner=root group=root mode=0755

#
# MariaDB用設定ファイル作成
#
- name: Create MariaDB data directory
  file: path='{{ servezero_path }}/{{ servezero_share_volume }}/mariadb/data' state=directory owner=root group=root mode=0755
- name: Copy MariaDB conf file
  copy: src='./container/db/files/custom.cnf' dest='{{ servezero_path }}/{{ servezero_share_volume }}/mariadb/custom.cnf' owner=root group=root mode=0644

#
# Nginx用設定ファイル作成
#
- name: Create Nginx conf directory
  file: path='{{ servezero_path }}/{{ servezero_share_volume }}/nginx/conf.d' state=directory owner=root group=root mode=0755
- name: Create Nginx ssl directory
  file: path='{{ servezero_path }}/{{ servezero_share_volume }}/nginx/ssl' state=directory owner=root group=root mode=0755
- name: Create multi domain site config directory
  file: path='{{ servezero_path }}/{{ servezero_share_volume }}/nginx/sites-available' state=directory owner=root group=root mode=0755
- name: Create virtual host home directory
  file: path='{{ servezero_path }}/{{ servezero_share_volume }}/nginx/vhost' state=directory owner=root group=root mode=0755
- name: Copy nginx.conf
  copy: src='./container/nginx/files/nginx.conf' dest='{{ servezero_path }}/{{ servezero_share_volume }}/nginx/nginx.conf' owner=root group=root mode=0644
- name: Create default site configuration
  template: src='./container/nginx/templates/default.conf.j2' dest='{{ servezero_path }}/{{ servezero_share_volume }}/nginx/conf.d/default.conf' owner=root group=root mode=0644
- name: Configure Nginx log rotation
  #copy: src="./container/nginx/files/logrotate_nginx" dest="/etc/logrotate.d/docker-nginx" owner=root group=root mode=0644
  template: src='./container/nginx/templates/logrotate_nginx.j2' dest='/etc/logrotate.d/docker-nginx' owner=root group=root mode=0644

# エラーページ
- name: make error page directory
  file: path='{{ servezero_path }}/{{ servezero_share_volume }}/nginx/error' state=directory owner=root group=root mode=0755
- copy: src='error/forbidden.html' dest='{{ servezero_path }}/{{ servezero_share_volume }}/nginx/error/forbidden.html' owner=root group=root mode=0644
- copy: src='error/internalservererror.html' dest='{{ servezero_path }}/{{ servezero_share_volume }}/nginx/error/internalservererror.html' owner=root group=root mode=0644
- copy: src='error/notfound.html' dest='{{ servezero_path }}/{{ servezero_share_volume }}/nginx/error/notfound.html' owner=root group=root mode=0644
- copy: src='error/unauthorized.html' dest='{{ servezero_path }}/{{ servezero_share_volume }}/nginx/error/unauthorized.html' owner=root group=root mode=0644
- copy: src='error/serviceunavailable.html' dest='{{ servezero_path }}/{{ servezero_share_volume }}/nginx/error/serviceunavailable.html' owner=root group=root mode=0644

#
# PHP用設定ファイル作成
#
- name: Create PHP conf directory
  file: path='{{ servezero_path }}/{{ servezero_share_volume }}/php' state=directory owner=root group=root mode=0755
- name: Copy php.ini
  copy: src='./container/php/files/php.ini' dest='{{ servezero_path }}/{{ servezero_share_volume }}/php/php.ini' owner=root group=root mode=0644
- name: Create PHP-FPM conf directory
  file: path='{{ servezero_path }}/{{ servezero_share_volume }}/php/php-fpm.d' state=directory owner=root group=root mode=0755
- name: Create PHP-FPM configuration
  template: src='./container/php/templates/www.conf.j2' dest='{{ servezero_path }}/{{ servezero_share_volume }}/php/php-fpm.d/www.conf' owner=root group=root mode=0644
#- name: Create sample PHP directory
#  file: path='{{ www_document_root }}/_sample' state=directory owner=root group=root mode=0755

# - name: Copy sample PHP scripts
#   template:
#     src: "./container/php/templates/sample/{{ item }}.j2"
#     dest: "{{ www_document_root }}/_sample/{{ item }}"
#   with_items:
#     - index.php
#     - index2.php

#
# ネットワーク作成
#
- name: Create a network
  docker_network:
    name: local-network

#
# MariaDBコンテナ作成
#
- name: Create build directory
  file:
    path: './container/db/build'
    state: directory
    owner: "{{ ansible_ssh_user | default(ansible_env.SUDO_USER, true) | default(ansible_env.USER, true) | default(ansible_user_id) }}"
    group: "{{ ansible_ssh_user | default(ansible_env.SUDO_USER, true) | default(ansible_env.USER, true) | default(ansible_user_id) }}"
    mode: '0755'

- name: Create Dockerfile
  template:
    src: './container/db/templates/Dockerfile.j2'
    dest: './container/db/build/Dockerfile'
    owner: "{{ ansible_ssh_user | default(ansible_env.SUDO_USER, true) | default(ansible_env.USER, true) | default(ansible_user_id) }}"
    group: "{{ ansible_ssh_user | default(ansible_env.SUDO_USER, true) | default(ansible_env.USER, true) | default(ansible_user_id) }}"
    mode: '0644'

- name: Build MariaDB image and push
  docker_image:
    name: local/db
    build:
      path: './container/db/build'
    source: build

- name: Create MariaDB container
  docker_container:
    name: db
    image: local/db
    recreate: yes
    state: started
    restart_policy: always
#        ports: 3306:3306
#        exposed_ports: 3306
    networks:
      - name: local-network
    env:
      MARIADB_ROOT_PASSWORD: '{{ db_root_password }}'
      MARIADB_DATABASE: '{{ sample_db_name }}'
      MARIADB_USER: '{{ sample_db_user }}'
      MARIADB_PASSWORD: '{{ sample_db_password }}'
      MARIADB_ROOT_HOST: '%'
    log_driver: journald
    log_options:
      tag: "{{ '{{' }}.ImageName{{ '}}' }}/{{ '{{' }}.Name{{ '}}' }}/{{ '{{' }}.ID{{ '}}' }}"
    volumes:
      - '{{ servezero_path }}/{{ servezero_share_volume }}/mariadb/data:/var/lib/mysql'
      - '{{ servezero_path }}/{{ servezero_share_volume }}/mariadb/custom.cnf:/etc/mysql/conf.d/custom.cnf:ro'
  
#
# PHPコンテナ作成
#
- name: Create build directory
  file:
    path: './container/php/build'
    state: directory
    owner: "{{ ansible_ssh_user | default(ansible_env.SUDO_USER, true) | default(ansible_env.USER, true) | default(ansible_user_id) }}"
    group: "{{ ansible_ssh_user | default(ansible_env.SUDO_USER, true) | default(ansible_env.USER, true) | default(ansible_user_id) }}"
    mode: '0755'

- name: Create Dockerfile
  template:
    src: './container/php/templates/Dockerfile.j2'
    dest: './container/php/build/Dockerfile'
    owner: "{{ ansible_ssh_user | default(ansible_env.SUDO_USER, true) | default(ansible_env.USER, true) | default(ansible_user_id) }}"
    group: "{{ ansible_ssh_user | default(ansible_env.SUDO_USER, true) | default(ansible_env.USER, true) | default(ansible_user_id) }}"
    mode: '0644'

- name: Build php image and push
  docker_image:
    name: local/php
    build:
      path: './container/php/build'
    source: build

- name: Create php container
  docker_container:
    name: php
    image: local/php
    recreate: yes
    state: started
    restart_policy: always
    networks:
      - name: local-network
    log_driver: journald
    log_options:
      tag: "{{ '{{' }}.ImageName{{ '}}' }}/{{ '{{' }}.Name{{ '}}' }}/{{ '{{' }}.ID{{ '}}' }}"
    volumes:
      - '{{ www_document_root }}:/var/www/html:ro'   # www directory
      - '{{ servezero_path }}/{{ servezero_share_volume }}/vhost:/var/www/vhost:rw'
      - '{{ servezero_path }}/{{ servezero_share_volume }}/php/php.ini:/usr/local/etc/php/conf.d/my.ini:ro'
      - '{{ servezero_path }}/{{ servezero_share_volume }}/php/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:ro'

#
# Nginxコンテナ作成
#
- name: Create build directory
  file:
    path: './container/nginx/build'
    state: directory
    owner: "{{ ansible_ssh_user | default(ansible_env.SUDO_USER, true) | default(ansible_env.USER, true) | default(ansible_user_id) }}"
    group: "{{ ansible_ssh_user | default(ansible_env.SUDO_USER, true) | default(ansible_env.USER, true) | default(ansible_user_id) }}"
    mode: '0755'

- name: Create Dockerfile
  template:
    src: './container/nginx/templates/Dockerfile.j2'
    dest: './container/nginx/build/Dockerfile'
    owner: "{{ ansible_ssh_user | default(ansible_env.SUDO_USER, true) | default(ansible_env.USER, true) | default(ansible_user_id) }}"
    group: "{{ ansible_ssh_user | default(ansible_env.SUDO_USER, true) | default(ansible_env.USER, true) | default(ansible_user_id) }}"
    mode: '0644'

- name: Build nginx image and push
  docker_image:
    name: local/nginx
    build:
      path: './container/nginx/build'
    source: build

- name: Create nginx container
  docker_container:
    name: nginx
    image: local/nginx
    recreate: yes
    state: started
    restart_policy: always
    ports:
      - 80:80
      - 443:443
    networks:
      - name: local-network
    log_driver: journald
    log_options:
      tag: "{{ '{{' }}.ImageName{{ '}}' }}/{{ '{{' }}.Name{{ '}}' }}/{{ '{{' }}.ID{{ '}}' }}"
    volumes:
      - '{{ www_document_root }}:/var/www/html:ro'   # www directory
      - '{{ servezero_path }}/{{ servezero_share_volume }}/vhost:/var/www/vhost:rw'
      - '{{ servezero_path }}/{{ servezero_share_volume }}/log/nginx:/var/log/nginx' # log directroy
      - '{{ servezero_path }}/{{ servezero_share_volume }}/nginx/nginx.conf:/etc/nginx/nginx.conf:ro'
      - '{{ servezero_path }}/{{ servezero_share_volume }}/nginx/conf.d:/etc/nginx/conf.d:ro'
      - '{{ servezero_path }}/{{ servezero_share_volume }}/nginx/ssl:/etc/nginx/ssl:rw'
      - '{{ servezero_path }}/{{ servezero_share_volume }}/nginx/sites-available:/etc/nginx/sites-available:ro'
      - '{{ servezero_path }}/{{ servezero_share_volume }}/nginx/error:/var/www/error:ro'

#
# ファイアウォールの設定
#
- name: Open 8080/tcp port for ServeZero web application
  firewalld:
    zone: public
    port: '{{ servezero_app_port }}/tcp'
    permanent: yes
    state: enabled
- name: Restart Firewalld service
  service: name=firewalld state=restarted enabled=yes
